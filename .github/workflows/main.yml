name: CI/CD workflow

env:
  SERVER_IP: "ec2-51-21-115-3.eu-north-1.compute.amazonaws.com"
  SERVER_USER: "ubuntu"
  SERVER_PORT: "2222"

on:
  push:
    branches:
      - main

jobs:
  tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./server
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install node
        uses: actions/setup-node@v4
        with:
          cache: "npm"
          cache-dependency-path: "./server/package-lock.json"
      - name: Install dependencies
        run: npm ci
      - name: Verify code
        run: npm run lint
      - name: Verify vulnerabilities
        run: npm audit --production --audit-level=critical
      - name: Run tests
        run: npm run test:ci

  deploy:
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Deploy
        run: |
          eval "$(ssh-agent -s)"
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY_VPS }}" | tr -d '\r' > ~/.ssh/key
          chmod 600 ~/.ssh/key
          ssh-add ~/.ssh/key
          ssh-add -l

          ssh-keyscan -H -p ${{ env.SERVER_PORT }} ${{ env.SERVER_IP }} >> ~/.ssh/known_hosts

          # Test de connexion basique
          echo "Test de connexion SSH basique..."
          ssh -v -i ~/.ssh/key -p ${{ env.SERVER_PORT }} ${{ env.SERVER_USER }}@${{ env.SERVER_IP }} "echo 'Connexion réussie'"

          # Vérification avec source du profil
          echo "Vérification de Node.js..."
          ssh -p ${{ env.SERVER_PORT }} ${{ env.SERVER_USER }}@${{ env.SERVER_IP }} "source ~/.profile && node -v"

          echo "Vérification de npm..."
          ssh -p ${{ env.SERVER_PORT }} ${{ env.SERVER_USER }}@${{ env.SERVER_IP }} "source ~/.profile && npm -v"

          # Suite des commandes avec source
          ssh -p ${{ env.SERVER_PORT }} ${{ env.SERVER_USER }}@${{ env.SERVER_IP }} "source ~/.profile && cd /home/ubuntu/server && sudo npm install"

          # Préparation du répertoire
          echo "Préparation du répertoire..."
          ssh -p ${{ env.SERVER_PORT }} ${{ env.SERVER_USER }}@${{ env.SERVER_IP }} "sudo mkdir -p /home/ubuntu/server && sudo chown ubuntu:ubuntu /home/ubuntu/server"

          # Copie des fichiers
          echo "Copie des fichiers..."
          scp -v -P ${{ env.SERVER_PORT }} -r ./server ${{ env.SERVER_USER }}@${{ env.SERVER_IP }}:/home/ubuntu/

          # Démarrage de l'application
          echo "Démarrage de l'application..."
          ssh -p ${{ env.SERVER_PORT }} ${{ env.SERVER_USER }}@${{ env.SERVER_IP }} "source ~/.profile && cd /home/ubuntu/server && sudo pm2 startOrRestart ecosystem.config.js --env production && sudo pm2 save"

        #      run: |
        # eval "$(ssh-agent -s)"
        # ssh-add - <<< "${{ secrets.SSH_KEY_VPS }}"
        # mkdir -p ~/.ssh
        # ssh-keyscan -H -p ${{ env.SERVER_PORT }} ${{ env.SERVER_IP }} >> ~/.ssh/known_hosts
        # ssh -p ${{ env.SERVER_PORT }} ${{ env.SERVER_USER }}@${{ env.SERVER_IP }} "which node && which npm && node -v && npm -v"
        # ssh -p ${{ env.SERVER_PORT }} ${{ env.SERVER_USER }}@${{ env.SERVER_IP }} "sudo mkdir -p /home/ubuntu/server && sudo chown ubuntu:ubuntu /home/ubuntu/server"
        # scp -P ${{ env.SERVER_PORT }} -r ./server ${{ env.SERVER_USER }}@${{ env.SERVER_IP }}:/home/ubuntu/
        # ssh -p ${{ env.SERVER_PORT }} ${{ env.SERVER_USER }}@${{ env.SERVER_IP }} "cd /home/ubuntu/server && sudo chown -R ubuntu:ubuntu . && sudo npm install"
        # ssh -p ${{ env.SERVER_PORT }} ${{ env.SERVER_USER }}@${{ env.SERVER_IP }} "cd /home/ubuntu/server && sudo pm2 startOrRestart ecosystem.config.js --env production && sudo pm2 save"
