name: CI/CD workflow

env:
  SERVER_IP: "ec2-51-21-115-3.eu-north-1.compute.amazonaws.com"
  SERVER_USER: "ubuntu"
  SERVER_PORT: "2222"

on:
  push:
    branches:
      - main

jobs:
  tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./server
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install node
        uses: actions/setup-node@v4
        with:
          cache: "npm"
          cache-dependency-path: "./server/package-lock.json"
      - name: Install dependencies
        run: npm ci
      - name: Verify code
        run: npm run lint
      - name: Verify vulnerabilities
        run: npm audit --production --audit-level=critical
      - name: Run tests
        run: npm run test:ci

  deploy:
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Deploy
        run: |
          eval "$(ssh-agent -s)"
          ssh-add - <<< "${{ secrets.SSH_KEY_VPS }}"
          mkdir -p ~/.ssh
          ssh -p ${{ env.SERVER_PORT }} ${{ env.SERVER_USER }}@${{ env.SERVER_IP }} "which node && which npm && node -v && npm -v"
          ssh-keyscan -H -p ${{ env.SERVER_PORT }} ${{ env.SERVER_IP }} >> ~/.ssh/known_hosts
          scp -P ${{ env.SERVER_PORT }} -r ./server ${{ env.SERVER_USER }}@${{ env.SERVER_IP }}:/home/ubuntu/
          ssh -p ${{ env.SERVER_PORT }} ${{ env.SERVER_USER }}@${{ env.SERVER_IP }} "cd /home/ubuntu/server && npm install"
          ssh -p ${{ env.SERVER_PORT }} ${{ env.SERVER_USER }}@${{ env.SERVER_IP }} "cd /home/ubuntu/server && pm2 startOrRestart ecosystem.config.js --env production && pm2 save"
